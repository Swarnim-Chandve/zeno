"use strict";(()=>{var e={};e.id=944,e.ids=[944],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},721:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>f,requestAsyncStorage:()=>h,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y});var n={};t.r(n),t.d(n,{GET:()=>u,POST:()=>d});var o=t(9303),a=t(8716),s=t(670),i=t(7070);let p=0,l=[];async function u(e){try{let e={totalOnline:Math.max(1,p),waitingPlayers:l.slice(0,5)};return i.NextResponse.json(e)}catch(e){return console.error("Error fetching online players:",e),i.NextResponse.json({error:"Failed to fetch online players"},{status:500})}}async function d(e){try{let{action:r,playerAddress:t}=await e.json();return"join"===r?(p+=1,l.push({address:t||"Anonymous",joinedAt:Date.now()})):"leave"===r&&(p=Math.max(0,p-1),l=l.filter(e=>e.address!==t)),i.NextResponse.json({success:!0})}catch(e){return console.error("Error updating online players:",e),i.NextResponse.json({error:"Failed to update online players"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/online-players/route",pathname:"/api/online-players",filename:"route",bundlePath:"app/api/online-players/route"},resolvedPagePath:"/home/swarnim/Desktop/hackathons/zeno/frontend/app/api/online-players/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:h,staticGenerationAsyncStorage:y,serverHooks:m}=c,x="/api/online-players/route";function f(){return(0,s.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[948,972],()=>t(721));module.exports=n})();